{
  "version": "tree-0.1",
  "tree": {
    "id": "App",
    "path": "",
    "children": {
      "rc-db": {
        "id": "rc-db",
        "path": "rc-db",
        "children": {
          "rocket-web": {
            "id": "rocket-web",
            "path": "rc-db/rocket-web",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "rc-db/rocket-web/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::DynamoDB::Table",
                  "aws:cdk:cloudformation:props": {
                    "attributeDefinitions": [
                      {
                        "attributeName": "uid",
                        "attributeType": "N"
                      }
                    ],
                    "keySchema": [
                      {
                        "attributeName": "uid",
                        "keyType": "HASH"
                      }
                    ],
                    "provisionedThroughput": {
                      "readCapacityUnits": 5,
                      "writeCapacityUnits": 5
                    },
                    "tableName": "rocket-web"
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_dynamodb.CfnTable",
                  "version": "2.134.0"
                }
              },
              "ScalingRole": {
                "id": "ScalingRole",
                "path": "rc-db/rocket-web/ScalingRole",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.134.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_dynamodb.Table",
              "version": "2.134.0"
            }
          },
          "CDKMetadata": {
            "id": "CDKMetadata",
            "path": "rc-db/CDKMetadata",
            "children": {
              "Default": {
                "id": "Default",
                "path": "rc-db/CDKMetadata/Default",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.134.0"
                }
              },
              "Condition": {
                "id": "Condition",
                "path": "rc-db/CDKMetadata/Condition",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnCondition",
                  "version": "2.134.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "constructs.Construct",
              "version": "10.3.0"
            }
          },
          "BootstrapVersion": {
            "id": "BootstrapVersion",
            "path": "rc-db/BootstrapVersion",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnParameter",
              "version": "2.134.0"
            }
          },
          "CheckBootstrapVersion": {
            "id": "CheckBootstrapVersion",
            "path": "rc-db/CheckBootstrapVersion",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnRule",
              "version": "2.134.0"
            }
          }
        },
        "constructInfo": {
          "fqn": "aws-cdk-lib.Stack",
          "version": "2.134.0"
        }
      },
      "rc-ec2": {
        "id": "rc-ec2",
        "path": "rc-ec2",
        "children": {
          "VPC": {
            "id": "VPC",
            "path": "rc-ec2/VPC",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "rc-ec2/VPC/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EC2::VPC",
                  "aws:cdk:cloudformation:props": {
                    "cidrBlock": "10.0.0.0/16",
                    "enableDnsHostnames": true,
                    "enableDnsSupport": true,
                    "instanceTenancy": "default",
                    "tags": [
                      {
                        "key": "Name",
                        "value": "rc-ec2/VPC"
                      }
                    ]
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_ec2.CfnVPC",
                  "version": "2.134.0"
                }
              },
              "publicSubnet1": {
                "id": "publicSubnet1",
                "path": "rc-ec2/VPC/publicSubnet1",
                "children": {
                  "Subnet": {
                    "id": "Subnet",
                    "path": "rc-ec2/VPC/publicSubnet1/Subnet",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Subnet",
                      "aws:cdk:cloudformation:props": {
                        "availabilityZone": "us-east-1a",
                        "cidrBlock": "10.0.0.0/16",
                        "mapPublicIpOnLaunch": true,
                        "tags": [
                          {
                            "key": "aws-cdk:subnet-name",
                            "value": "public"
                          },
                          {
                            "key": "aws-cdk:subnet-type",
                            "value": "Public"
                          },
                          {
                            "key": "Name",
                            "value": "rc-ec2/VPC/publicSubnet1"
                          }
                        ],
                        "vpcId": {
                          "Ref": "VPCB9E5F0B4"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnSubnet",
                      "version": "2.134.0"
                    }
                  },
                  "Acl": {
                    "id": "Acl",
                    "path": "rc-ec2/VPC/publicSubnet1/Acl",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.134.0"
                    }
                  },
                  "RouteTable": {
                    "id": "RouteTable",
                    "path": "rc-ec2/VPC/publicSubnet1/RouteTable",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::RouteTable",
                      "aws:cdk:cloudformation:props": {
                        "tags": [
                          {
                            "key": "Name",
                            "value": "rc-ec2/VPC/publicSubnet1"
                          }
                        ],
                        "vpcId": {
                          "Ref": "VPCB9E5F0B4"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnRouteTable",
                      "version": "2.134.0"
                    }
                  },
                  "RouteTableAssociation": {
                    "id": "RouteTableAssociation",
                    "path": "rc-ec2/VPC/publicSubnet1/RouteTableAssociation",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SubnetRouteTableAssociation",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "VPCpublicSubnet1RouteTableF591E248"
                        },
                        "subnetId": {
                          "Ref": "VPCpublicSubnet1Subnet325F50B2"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnSubnetRouteTableAssociation",
                      "version": "2.134.0"
                    }
                  },
                  "DefaultRoute": {
                    "id": "DefaultRoute",
                    "path": "rc-ec2/VPC/publicSubnet1/DefaultRoute",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Route",
                      "aws:cdk:cloudformation:props": {
                        "destinationCidrBlock": "0.0.0.0/0",
                        "gatewayId": {
                          "Ref": "VPCIGWB7E252D3"
                        },
                        "routeTableId": {
                          "Ref": "VPCpublicSubnet1RouteTableF591E248"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnRoute",
                      "version": "2.134.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_ec2.PublicSubnet",
                  "version": "2.134.0"
                }
              },
              "IGW": {
                "id": "IGW",
                "path": "rc-ec2/VPC/IGW",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EC2::InternetGateway",
                  "aws:cdk:cloudformation:props": {
                    "tags": [
                      {
                        "key": "Name",
                        "value": "rc-ec2/VPC"
                      }
                    ]
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_ec2.CfnInternetGateway",
                  "version": "2.134.0"
                }
              },
              "VPCGW": {
                "id": "VPCGW",
                "path": "rc-ec2/VPC/VPCGW",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EC2::VPCGatewayAttachment",
                  "aws:cdk:cloudformation:props": {
                    "internetGatewayId": {
                      "Ref": "VPCIGWB7E252D3"
                    },
                    "vpcId": {
                      "Ref": "VPCB9E5F0B4"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_ec2.CfnVPCGatewayAttachment",
                  "version": "2.134.0"
                }
              },
              "RestrictDefaultSecurityGroupCustomResource": {
                "id": "RestrictDefaultSecurityGroupCustomResource",
                "path": "rc-ec2/VPC/RestrictDefaultSecurityGroupCustomResource",
                "children": {
                  "Default": {
                    "id": "Default",
                    "path": "rc-ec2/VPC/RestrictDefaultSecurityGroupCustomResource/Default",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.134.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CustomResource",
                  "version": "2.134.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_ec2.Vpc",
              "version": "2.134.0"
            }
          },
          "Custom::VpcRestrictDefaultSGCustomResourceProvider": {
            "id": "Custom::VpcRestrictDefaultSGCustomResourceProvider",
            "path": "rc-ec2/Custom::VpcRestrictDefaultSGCustomResourceProvider",
            "children": {
              "Staging": {
                "id": "Staging",
                "path": "rc-ec2/Custom::VpcRestrictDefaultSGCustomResourceProvider/Staging",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.AssetStaging",
                  "version": "2.134.0"
                }
              },
              "Role": {
                "id": "Role",
                "path": "rc-ec2/Custom::VpcRestrictDefaultSGCustomResourceProvider/Role",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.134.0"
                }
              },
              "Handler": {
                "id": "Handler",
                "path": "rc-ec2/Custom::VpcRestrictDefaultSGCustomResourceProvider/Handler",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.134.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.CustomResourceProviderBase",
              "version": "2.134.0"
            }
          },
          "Ron-ec2-SecurityGroup": {
            "id": "Ron-ec2-SecurityGroup",
            "path": "rc-ec2/Ron-ec2-SecurityGroup",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "rc-ec2/Ron-ec2-SecurityGroup/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroup",
                  "aws:cdk:cloudformation:props": {
                    "groupDescription": "Allow ssh, http, and https access to ec2 instances",
                    "securityGroupEgress": [
                      {
                        "cidrIp": "0.0.0.0/0",
                        "ipProtocol": "tcp",
                        "fromPort": 80,
                        "toPort": 80,
                        "description": "Allow HTTP outbound"
                      },
                      {
                        "cidrIp": "0.0.0.0/0",
                        "ipProtocol": "tcp",
                        "fromPort": 443,
                        "toPort": 443,
                        "description": "Allow HTTPS outbound"
                      },
                      {
                        "cidrIp": "0.0.0.0/0",
                        "ipProtocol": "tcp",
                        "fromPort": 22,
                        "toPort": 22,
                        "description": "Allow SSH outbound"
                      }
                    ],
                    "securityGroupIngress": [
                      {
                        "cidrIp": "0.0.0.0/0",
                        "ipProtocol": "tcp",
                        "fromPort": 22,
                        "toPort": 22,
                        "description": "Allow ssh access from the world"
                      },
                      {
                        "cidrIp": "0.0.0.0/0",
                        "ipProtocol": "tcp",
                        "fromPort": 80,
                        "toPort": 80,
                        "description": "Allow HTTP access from anywhere"
                      },
                      {
                        "cidrIp": "0.0.0.0/0",
                        "ipProtocol": "tcp",
                        "fromPort": 443,
                        "toPort": 443,
                        "description": "Allow HTTP access from anywhere"
                      }
                    ],
                    "vpcId": {
                      "Ref": "VPCB9E5F0B4"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_ec2.CfnSecurityGroup",
                  "version": "2.134.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_ec2.SecurityGroup",
              "version": "2.134.0"
            }
          },
          "KeyPair": {
            "id": "KeyPair",
            "path": "rc-ec2/KeyPair",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.134.0"
            }
          },
          "InstanceSSM": {
            "id": "InstanceSSM",
            "path": "rc-ec2/InstanceSSM",
            "children": {
              "ImportInstanceSSM": {
                "id": "ImportInstanceSSM",
                "path": "rc-ec2/InstanceSSM/ImportInstanceSSM",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.134.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "rc-ec2/InstanceSSM/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                  "aws:cdk:cloudformation:props": {
                    "assumeRolePolicyDocument": {
                      "Statement": [
                        {
                          "Action": "sts:AssumeRole",
                          "Effect": "Allow",
                          "Principal": {
                            "Service": "ec2.amazonaws.com"
                          }
                        }
                      ],
                      "Version": "2012-10-17"
                    },
                    "managedPolicyArns": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":iam::aws:policy/AmazonSSMManagedInstanceCore"
                          ]
                        ]
                      }
                    ]
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                  "version": "2.134.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_iam.Role",
              "version": "2.134.0"
            }
          },
          "Instance": {
            "id": "Instance",
            "path": "rc-ec2/Instance",
            "children": {
              "InstanceProfile": {
                "id": "InstanceProfile",
                "path": "rc-ec2/Instance/InstanceProfile",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::IAM::InstanceProfile",
                  "aws:cdk:cloudformation:props": {
                    "roles": [
                      {
                        "Ref": "InstanceSSMCBFA3CF0"
                      }
                    ]
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.CfnInstanceProfile",
                  "version": "2.134.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "rc-ec2/Instance/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EC2::Instance",
                  "aws:cdk:cloudformation:props": {
                    "availabilityZone": "us-east-1a",
                    "iamInstanceProfile": {
                      "Ref": "InstanceInstanceProfileAB5AEF02"
                    },
                    "imageId": {
                      "Ref": "SsmParameterValueawsserviceamiamazonlinuxlatestal2023amikernel61x8664C96584B6F00A464EAD1953AFF4B05118Parameter"
                    },
                    "instanceType": "t2.micro",
                    "keyName": "RonKeyPair",
                    "securityGroupIds": [
                      {
                        "Fn::GetAtt": [
                          "Ronec2SecurityGroup3284CC8A",
                          "GroupId"
                        ]
                      }
                    ],
                    "subnetId": {
                      "Ref": "VPCpublicSubnet1Subnet325F50B2"
                    },
                    "tags": [
                      {
                        "key": "Name",
                        "value": "rc-ec2/Instance"
                      }
                    ],
                    "userData": {
                      "Fn::Base64": {
                        "Fn::Join": [
                          "",
                          [
                            "#!/bin/bash\n",
                            {
                              "Fn::Sub": "#!/bin/bash\n\n# Update and install necessary packages\nsudo yum update -y\nsudo yum install -y git nginx\nsudo dnf install -y httpd\n\n# Install NVM and Node.js\ncurl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.37.2/install.sh | bash\nexport NVM_DIR=\"$HOME/.nvm\"\n[ -s \"$NVM_DIR/nvm.sh\" ] && \\. \"$NVM_DIR/nvm.sh\"  # This loads nvm\n[ -s \"$NVM_DIR/bash_completion\" ] && \\. \"$NVM_DIR/bash_completion\"  # This loads nvm bash_completion\nnvm install 16.0.0\n\n# Clone the repository and build the project\ngit clone https://github.com/tina35917/rocketweb.git\ncd rocketweb\nnpm install\nnpm run build\n\n# Move the built files to the web server directory\ncd build\nsudo mv * /var/www/html\ncd\ncd /etc/nginx/\n\n# Rewrite nginx.conf file with predefined configuration\ncat << EOF | sudo tee tmpnginx.conf > /dev/null\n\nuser nginx;\nworker_processes auto;\nerror_log /var/log/nginx/error.log notice;\npid /run/nginx.pid;\n\ninclude /usr/share/nginx/modules/*.conf;\n\nevents {\n    worker_connections 1024;\n}\n\nhttp {\n    log_format  main  '\\$remote_addr - \\$remote_user [\\$time_local] \"\\$request\" '\n                      '\\$status \\$body_bytes_sent \"\\$http_referer\" '\n                      '\"\\$http_user_agent\" \"\\$http_x_forwarded_for\"';\n\n    access_log  /var/log/nginx/access.log  main;\n\n    sendfile            on;\n    tcp_nopush          on;\n    keepalive_timeout   65;\n    types_hash_max_size 4096;\n\n    include             /etc/nginx/mime.types;\n    default_type        application/octet-stream;\n\n    include /etc/nginx/conf.d/*.conf;\n\n    server {\n        listen       80;\n        listen       [::]:80;\n        server_name  _;\n        root         /var/www/html;\n\n        location / {\n            try_files \\$uri /index.html;\n        }\n        location /static/ {\n            alias /var/www/html/static/;\n        }\n        location /media/ {\n            # Path to your media files (if applicable)\n            alias /var/www/html/media/;\n        }\n        # Load configuration files for the default server block.\n        include /etc/nginx/default.d/*.conf;\n\n        error_page 404 /404.html;\n        location = /404.html {\n        }\n\n        error_page 500 502 503 504 /50x.html;\n        location = /50x.html {\n        }\n    }\n}\nEOF\n\n# Overwrite nginx.conf with the predefined configuration\nsudo mv tmpnginx.conf nginx.conf\n\n# Start nginx service\nsudo systemctl start nginx"
                            }
                          ]
                        ]
                      }
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_ec2.CfnInstance",
                  "version": "2.134.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_ec2.Instance",
              "version": "2.134.0"
            }
          },
          "SsmParameterValue:--aws--service--ami-amazon-linux-latest--al2023-ami-kernel-6.1-x86_64:C96584B6-F00A-464E-AD19-53AFF4B05118.Parameter": {
            "id": "SsmParameterValue:--aws--service--ami-amazon-linux-latest--al2023-ami-kernel-6.1-x86_64:C96584B6-F00A-464E-AD19-53AFF4B05118.Parameter",
            "path": "rc-ec2/SsmParameterValue:--aws--service--ami-amazon-linux-latest--al2023-ami-kernel-6.1-x86_64:C96584B6-F00A-464E-AD19-53AFF4B05118.Parameter",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnParameter",
              "version": "2.134.0"
            }
          },
          "SsmParameterValue:--aws--service--ami-amazon-linux-latest--al2023-ami-kernel-6.1-x86_64:C96584B6-F00A-464E-AD19-53AFF4B05118": {
            "id": "SsmParameterValue:--aws--service--ami-amazon-linux-latest--al2023-ami-kernel-6.1-x86_64:C96584B6-F00A-464E-AD19-53AFF4B05118",
            "path": "rc-ec2/SsmParameterValue:--aws--service--ami-amazon-linux-latest--al2023-ami-kernel-6.1-x86_64:C96584B6-F00A-464E-AD19-53AFF4B05118",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.134.0"
            }
          },
          "CDKMetadata": {
            "id": "CDKMetadata",
            "path": "rc-ec2/CDKMetadata",
            "children": {
              "Default": {
                "id": "Default",
                "path": "rc-ec2/CDKMetadata/Default",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.134.0"
                }
              },
              "Condition": {
                "id": "Condition",
                "path": "rc-ec2/CDKMetadata/Condition",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnCondition",
                  "version": "2.134.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "constructs.Construct",
              "version": "10.3.0"
            }
          },
          "BootstrapVersion": {
            "id": "BootstrapVersion",
            "path": "rc-ec2/BootstrapVersion",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnParameter",
              "version": "2.134.0"
            }
          },
          "CheckBootstrapVersion": {
            "id": "CheckBootstrapVersion",
            "path": "rc-ec2/CheckBootstrapVersion",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnRule",
              "version": "2.134.0"
            }
          }
        },
        "constructInfo": {
          "fqn": "aws-cdk-lib.Stack",
          "version": "2.134.0"
        }
      },
      "Tree": {
        "id": "Tree",
        "path": "Tree",
        "constructInfo": {
          "fqn": "constructs.Construct",
          "version": "10.3.0"
        }
      }
    },
    "constructInfo": {
      "fqn": "aws-cdk-lib.App",
      "version": "2.134.0"
    }
  }
}